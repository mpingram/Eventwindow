TODO:

4/27/16
ok first off i wanna say UR AJAX CALL IS FUNCTIONAL IN THE MOST BASIC SENSE. SLAY, GIRL.

now:
- need to adjust fullcalendar styling / get rid of all day events
- worth picking through the source code too, for things to change - week enumeration, for example

- i really need better data in my db to wire up the ajax call properly... 
- let's draft a more inclusive mongoose schema, and then fill it with a hearty amount of test events.

- what else do I need to have a dash prototype?
	* functional CRUD ~ we're close
	* goodlooking frontend ~ ugh
	* solution to the list/calendar integration problem ~ gonna be hard. but what hasn't been?
	* jquery ui datepicker - it looks from the fc source there's direct integration for this
	* second view?









4/04/16 (??)
- stick in second fullcalendar
- modify fc options to format properly
- modify fc css for nice looking.

- begin writing onload ajax call for event data
- once ajax call works, begin writing mongodb schema for event object - fill it with all the attributes you wrote out in gdocs.
- once db populates list and calendars on load, work out livereload - how can we tell if resource has changed?
(do we need express to get involved, or does http protocol handle this somehow with 304s?)

- THEN, once we know the plumbing works, we fix the styling. Dropdown boxes in list, clickable items in calendar, and, the big one...
preview side-scroller. hooo boy how are we going to do that, by the way? A third calendar? no man no there's got to be a way to mirror
the element in a zoomed out way...... 0r render the calendar again, it may not be as computationally difficult as you think. Plus,
there may be a way to cut out the chaff... after all, we just need a visual representation, not the actual calendar's functionality.
This could be a fun problem - and defo something to keep a hold of if you nail it.

- anyway THEN using the new style resources get started on the EVENT PAGE. KEEP MODULARITY IN MIND SON.

- 

